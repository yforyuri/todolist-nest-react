{"ast":null,"code":"var _jsxFileName = \"/Users/yforyuri/Documents/GitHub/todolist-nest-react/frontend/src/components/Todolist.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todolist = () => {\n  _s();\n\n  const [todos, setToddos] = useState([]);\n  useEffect(() => {\n    const getTodos = async () => {\n      try {\n        const response = await axios.get('http://localhost:3010/todo');\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Todolist\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Todolist, \"Z9RVdj+xIGE6UAMoxAGIBF0IYXw=\");\n\n_c = Todolist;\nexport default Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/Users/yforyuri/Documents/GitHub/todolist-nest-react/frontend/src/components/Todolist.tsx"],"names":["React","useEffect","axios","useState","Todolist","todos","setToddos","getTodos","response","get","console","log","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAWA,MAAMC,QAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBH,QAAQ,CAAC,EAAD,CAAnC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,4BAAV,CAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,OAHD,CAGE,OAAOI,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,KAPD;;AAQAL,IAAAA,QAAQ;AACT,GAVQ,EAUN,EAVM,CAAT;AAYA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBD;;GAAMH,Q;;KAAAA,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import React, { FC, useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\n\ninterface Itodo {\n  id: number;\n  createAt: Date;\n  updateAt: Date;\n  title: string;\n  desc: string;\n  isComplete: boolean;\n}\n\nconst Todolist: FC = () => {\n  const [todos, setToddos] = useState([]);\n\n  useEffect(() => {\n    const getTodos = async () => {\n      try {\n        const response = await axios.get('http://localhost:3010/todo');\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getTodos();\n  }, []);\n\n  return <div>Todolist</div>;\n};\n\nexport default Todolist;\n"]},"metadata":{},"sourceType":"module"}